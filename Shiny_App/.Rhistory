shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
n<- 10
nb<- 2
dt<- 1
list_T <- periodique_T_random(n, dt, nb)
list_T
simu <- simulate_all_wiener(mu, sigma2, n ,nb,list_T)
n<- 10
nb<- 2
dt<- 1
mu<- 1
sigma2 <- 1
list_T <- periodique_T_random(n, dt, nb)
list_T
simu <- simulate_all_wiener(mu, sigma2, n ,nb,list_T)
simu[[1]]
T <- list(0, 1, 2)
r <- simulate_wiener(1, 1, 2, T)
r
runApp()
# Simule le processus de Wiener pour une courbe
simulate_wiener = function(mu, sigma2, n,T){
T = sort(unlist(T))
m = mu*T[2]
sdd = sqrt(sigma2 * T[1])
W = 1:n+1
W[1] = 0
for (i in 2:n+1){
m = mu*(T[i] - T[i-1])
sdd = sqrt(sigma2 * (T[i] - T[i-1]))
W[i] = W[i-1] + rnorm(1, mean = m, sd = sdd)
}
return (W)
}
# Simule le processus de Wiener pour plusieures courbes
simulate_all_wiener = function(mu, sigma2, n ,nb,list_T){
list_W = list()
for (k in 1:nb){
list_W[[k]]<-simulate_wiener(mu, sigma2, n,list_T[[k]])
}
return (list(list_W, list_T))
}
T <- list(0, 1, 2)
r <- simulate_wiener(1, 1, 2, T)
r
runApp()
runApp()
# Simule le processus de Wiener pour une courbe
simulate_wiener = function(mu, sigma2, n,T){
T = unlist(T)
m = mu*T[2]
sdd = sqrt(sigma2 * T[2])
W = 1:n+1
W[1] = 0
for (i in 2:n+1){
m = mu*(T[i] - T[i-1])
sdd = sqrt(sigma2 * (T[i] - T[i-1]))
W[i] = W[i-1] + rnorm(1, mean = m, sd = sdd)
}
return (W)
}
T <- list(0, 1, 2)
r <- simulate_wiener(1, 1, 2, T)
r
T <- list(0, 1, 2)
r <- simulate_wiener(1, 1, 2, T)
r
# Simule le processus de Wiener pour une courbe
simulate_wiener = function(mu, sigma2, n,T){
T = unlist(T)
m = mu*T[2]
sdd = sqrt(sigma2 * T[2])
W = 1:n+1
W[1] = 0
W[2] = rnorm(1, mean = m, sd = sdd)
for (i in 3:n+1){
m = mu*(T[i] - T[i-1])
sdd = sqrt(sigma2 * (T[i] - T[i-1]))
W[i] = W[i-1] + rnorm(1, mean = m, sd = sdd)
}
return (W)
}
T <- list(0, 1, 2)
r <- simulate_wiener(1, 1, 2, T)
r
T <- list(0, 1, 2, 3)
r <- simulate_wiener(1, 1, 3, T)
r
T <- list(0, 1, 2, 3)
r <- simulate_wiener(1, 1, 3, T)
r
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
